<div id="new_transaction_modal" class="modal fade">
  <div class="modal-dialog modal-sm">
    <div class="modal-content panel-primary">
      <div class="modal-heading panel-heading">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <div class="modal-title">
          <strong>New Transaction</strong>
        </div>
      </div> 
      <%= form_tag transaction_path, method: :post, id: "form-transaction", html: {autocomplete: "off"} do %>
        <%= hidden_field_tag :mtgo_id, @object.mtgo_id %>
        <div class="modal-body panel-body">
          <div class="form-group">
            <%= label_tag 'price', "Price", class: "control-label" %>
            <%= number_field_tag 'price', nil, min: 0.01, max: 999.9, step: 0.001, autocomplete: "off", class: "form-control" %>        
          </div>
          <div class="form-group">
            <%= label_tag 'quantity', "Quantity", class: "control-label" %>
            <%= number_field_tag 'quantity', 1, min: 1, max: 999, autocomplete: "off", class: "form-control" %>       
          </div>
          <small id="insufficient-tickets" style="display: none; color: #a94442;">
            You do not have enough tickets for this purchase.
          <br>
          </small>
          <small id="insufficient-cards" style="display: none; color: #a94442;">
            You do not have that many copies on DrawDiscard. 
          <br>
          </small>
        </div>
        <div class="modal-footer panel-footer">
          <div class="btn-group btn-group-justified">
            <div class="btn-group">       
              <%= submit_tag "Buy", class: "btn btn-info ", id: "submit-buy" %>
            </div>
            <div class="btn-group">       
              <%= submit_tag "Sell", class: "btn btn-danger ", id: "submit-sell" %>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

<div class="hidden" id="rails_count"> <%= @versions.select {|o| o.id == @object.id}.first.online %> </div>

<script>
$("#new_transaction").on("click submit", function() {
  $("#new_transaction_modal").modal("show");
})

  $("#price").on('input', function() { 
    if ($("#price").val() < 2 ){ document.getElementById("price").min = "0.01"; }
    else if ($("#price").val() >= 10 ) { document.getElementById("price").min = "0.0"; }
  });
  var mousedown = false;
  $("#price").on('mousedown', function(e) { mousedown = true; });
  $(document).on('mouseup', function(e) { mousedown = false; });
  var before_price = $("#price").val();
  $("#price").on('input', function(e) {
    if (mousedown) {
      if ( (before_price == 2) || (before_price == 10) ) { 
        if ( +before_price < +$("#price").val() ) {
          document.getElementById("price").value = before_price;
          price_increment("up");
          document.getElementById("price").stepUp(1);
        }
        else if ( +before_price > +$("#price").val()) {
          document.getElementById("price").value = before_price;
          price_increment("down");
          document.getElementById("price").stepDown(1);
        }
      }
    }
    before_price = $("#price").val();
    price_increment();
  }); 
  $("#price").on('keydown', function(e) { 
    if (e.which === 38) { price_increment("up"); }
    else if (e.which === 40) { price_increment("down"); }
  });
  $("#price").on('mousewheel', function(e) {
    if (e.originalEvent.wheelDelta > 0) { price_increment("up"); }
    else if (e.originalEvent.wheelDelta < 0) { price_increment("down"); }
  });
  function price_increment(direction) {
    if ($("#price").val() < 2 ){ document.getElementById("price").step = "0.001"; }
    else if ($("#price").val() == 2 ) {
      if (direction === "up") { document.getElementById("price").step = "0.01"; }
      else if (direction === "down") { document.getElementById("price").step = "0.001"; }
    }
    else if ($("#price").val() < 10 ) { document.getElementById("price").step = "0.01"; }
    else if ($("#price").val() == 10 ) {
      if (direction === "up") { document.getElementById("price").step = "0.1"; }
      else if (direction === "down") { document.getElementById("price").step = "0.01"; }
    }
    else if ($("#price").val() > 10 ) { document.getElementById("price").step = "0.1"; }
  }

 $('#form-transaction').bootstrapValidator({
   feedbackIcons: {
     valid: 'glyphicon glyphicon-ok',
     invalid: 'glyphicon glyphicon-remove',
     validating: 'glyphicon glyphicon-refresh'
   },
   fields: {
     price: {
       validators: {
         notEmpty: {
           message: 'The price is required and cannot be empty'
         },
         callback: {
           callback: function (value, validator, $field) {
             value = parseFloat(value);
             if ((value >= .01) && (value <= 2) && (value.toFixed(3) != value) ) {
               return {
                 valid: false,
                 message: 'Prices under 2 tickets must be set in increments of 0.001'
               }
             }
             else if ((value >= 2) && (value <= 10) && (value.toFixed(2) != value)) {
               return {
                 valid: false,
                 message: 'Prices between 2 and 10 tickets must be set in increments of 0.01'
               }
             }
             else if ((value >= 10) && (value.toFixed(1) != value) ) {
               return {
                 valid: false,
                 message: 'Prices above 10 tickets must be set in increments of 0.1'
               }
             }
             else {
               return {
                 valid: true
               }
             }
           }
         }
       }
     },
     quantity: {
       validators: {
         notEmpty: {
           message: 'The quantity is required and cannot be empty'
         },
         integer: {
           message: 'The quantity must be an integer'
         }
       }
     }
   }
 });

   $("#price, #quantity").on("input", function() {
    $('#form-transaction').data('bootstrapValidator').validate();

    var rails_count = parseInt( $("#rails_count").text().trim()) ;
    var rails_wallet = parseFloat( $("span.wallet").first().text().trim().replace(/\$/,'') );

    if (+$("#quantity").val() > rails_count ) {
      document.getElementById('submit-sell').disabled = true;
      $('#insufficient-cards').show();
    } else if ($('#form-transaction').data('bootstrapValidator').isValid()) {
      document.getElementById('submit-sell').disabled = false;
      $('#insufficient-cards').hide();
    } else {
      $('#insufficient-cards').hide();
    }
    if ((+$("#quantity").val() * +$('#price').val()) > rails_wallet ) {
      document.getElementById('submit-buy').disabled = true;
      $('#insufficient-tickets').show();
    } else if ($('#form-transaction').data('bootstrapValidator').isValid()) {
      document.getElementById('submit-buy').disabled = false;
      $('#insufficient-tickets').hide();
    } else {
      $('#insufficient-tickets').hide();
    }
  });


</script>

<%= render 'users/transactions_cancel_modal' %>
<%= render 'users/transfer_error_modal' %>